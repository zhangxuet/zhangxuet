<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>echarts</title>
    <url>/2020/01/06/echarts/echarts/</url>
    <content><![CDATA[<pre><code>
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
    &lt;head&gt;
        &lt;meta charset=&quot;utf-8&quot;&gt;
            &lt;title&gt;
                Document
            &lt;/title&gt;
        &lt;/meta&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;div id=&quot;main&quot; style=&quot;width: 1000px;height:600px;&quot;&gt;
        &lt;/div&gt;
        &lt;script src=&quot;https://cdn.bootcss.com/echarts/4.4.0-rc.1/echarts-en.common.js&quot;&gt;&lt;/script&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            // 基于准备好的dom，初始化echarts实例
        var chart = echarts.init(document.getElementById(&#39;main&#39;));

        var app = []


        var posList = [
    &#39;left&#39;, &#39;right&#39;, &#39;top&#39;, &#39;bottom&#39;,
    &#39;inside&#39;,
    &#39;insideTop&#39;, &#39;insideLeft&#39;, &#39;insideRight&#39;, &#39;insideBottom&#39;,
    &#39;insideTopLeft&#39;, &#39;insideTopRight&#39;, &#39;insideBottomLeft&#39;, &#39;insideBottomRight&#39;
];

app.configParameters = {
    rotate: {
        min: -90,
        max: 90
    },
    align: {
        options: {
            left: &#39;left&#39;,
            center: &#39;center&#39;,
            right: &#39;right&#39;
        }
    },
    verticalAlign: {
        options: {
            top: &#39;top&#39;,
            middle: &#39;middle&#39;,
            bottom: &#39;bottom&#39;
        }
    },
    position: {
        options: echarts.util.reduce(posList, function (map, pos) {
            map[pos] = pos;
            return map;
        }, {})
    },
    distance: {
        min: 0,
        max: 100
    }
};

app.config = {
    rotate: 90,
    align: &#39;left&#39;,
    verticalAlign: &#39;middle&#39;,
    position: &#39;insideBottom&#39;,
    distance: 15,
    onChange: function () {
        var labelOption = {
            normal: {
                rotate: app.config.rotate,
                align: app.config.align,
                verticalAlign: app.config.verticalAlign,
                position: app.config.position,
                distance: app.config.distance
            }
        };
        myChart.setOption({
            series: [{
                label: labelOption
            }, {
                label: labelOption
            }, {
                label: labelOption
            }, {
                label: labelOption
            }]
        });
    }
};


var labelOption = {
    normal: {
        show: true,
        position: app.config.position,
        distance: app.config.distance,
        align: app.config.align,
        verticalAlign: app.config.verticalAlign,
        rotate: app.config.rotate,
        formatter: &#39;{c}  {name|{a}}&#39;,
        fontSize: 16,
        rich: {
            name: {
                textBorderColor: &#39;#fff&#39;
            }
        }
    }
};

option = {
    color: [&#39;#003366&#39;, &#39;#006699&#39;, &#39;#4cabce&#39;, &#39;#e5323e&#39;],
    tooltip: {
        trigger: &#39;axis&#39;,
        axisPointer: {
            type: &#39;shadow&#39;
        }
    },
    legend: {
        data: [&#39;Forest&#39;, &#39;Steppe&#39;, &#39;Desert&#39;, &#39;Wetland&#39;]
    },
    toolbox: {
        show: true,
        orient: &#39;vertical&#39;,
        left: &#39;right&#39;,
        top: &#39;center&#39;,
        feature: {
            mark: {show: true},
            dataView: {show: true, readOnly: false},
            magicType: {show: true, type: [&#39;line&#39;, &#39;bar&#39;, &#39;stack&#39;, &#39;tiled&#39;]},
            restore: {show: true},
            saveAsImage: {show: true}
        }
    },
    calculable: true,
    xAxis: [
        {
            type: &#39;category&#39;,
            axisTick: {show: false},
            data: [&#39;2012&#39;, &#39;2013&#39;, &#39;2014&#39;, &#39;2015&#39;, &#39;2016&#39;]
        }
    ],
    yAxis: [
        {
            type: &#39;value&#39;
        }
    ],
    series: [
        {
            name: &#39;Forest&#39;,
            type: &#39;bar&#39;,
            barGap: 0,
            label: labelOption,
            data: [320, 332, 301, 334, 390]
        },
        {
            name: &#39;Steppe&#39;,
            type: &#39;bar&#39;,
            label: labelOption,
            data: [220, 182, 191, 234, 290]
        },
        {
            name: &#39;Desert&#39;,
            type: &#39;bar&#39;,
            label: labelOption,
            data: [150, 232, 201, 154, 190]
        },
        {
            name: &#39;Wetland&#39;,
            type: &#39;bar&#39;,
            label: labelOption,
            data: [98, 77, 101, 99, 40]
        }
    ]
};

chart.setOption(option)
        &lt;/script&gt;
    &lt;/body&gt;
&lt;/html&gt;</code></pre>]]></content>
      <categories>
        <category>echarts</category>
      </categories>
      <tags>
        <tag>echarts</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo引用本地图片无法显示</title>
    <url>/2020/01/06/problem/hexoImg/</url>
    <content><![CDATA[<p><strong>hexo引用本地图片无法显示</strong></p>
<ul>
<li>_config.yml文件中修改<code>post_asset_folder: true</code></li>
<li>安装插件<strong>hexo-asset-image</strong></li>
</ul>
<pre><code>npm install https://github.com/CodeFalling/hexo-asset-image --save</code></pre><ul>
<li><p>打开/node_modules/hexo-asset-image/index.js，将内容更换为下面的代码</p>
<p>hexo-asset-image版本问题，需要3.0以上版本</p>
</li>
</ul>
<pre><code>&#39;use strict&#39;;
var cheerio = require(&#39;cheerio&#39;);

// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string
function getPosition(str, m, i) {
  return str.split(m, i).join(m).length;
}

var version = String(hexo.version).split(&#39;.&#39;);
hexo.extend.filter.register(&#39;after_post_render&#39;, function(data){
  var config = hexo.config;
  if(config.post_asset_folder){
        var link = data.permalink;
    if(version.length &gt; 0 &amp;&amp; Number(version[0]) == 3)
       var beginPos = getPosition(link, &#39;/&#39;, 1) + 1;
    else
       var beginPos = getPosition(link, &#39;/&#39;, 3) + 1;
    // In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.
    var endPos = link.lastIndexOf(&#39;/&#39;) + 1;
    link = link.substring(beginPos, endPos);

    var toprocess = [&#39;excerpt&#39;, &#39;more&#39;, &#39;content&#39;];
    for(var i = 0; i &lt; toprocess.length; i++){
      var key = toprocess[i];

      var $ = cheerio.load(data[key], {
        ignoreWhitespace: false,
        xmlMode: false,
        lowerCaseTags: false,
        decodeEntities: false
      });

      $(&#39;img&#39;).each(function(){
        if ($(this).attr(&#39;src&#39;)){
            // For windows style path, we replace &#39;\&#39; to &#39;/&#39;.
            var src = $(this).attr(&#39;src&#39;).replace(&#39;\\&#39;, &#39;/&#39;);
            if(!/http[s]*.*|\/\/.*/.test(src) &amp;&amp;
               !/^\s*\//.test(src)) {
              // For &quot;about&quot; page, the first part of &quot;src&quot; can&#39;t be removed.
              // In addition, to support multi-level local directory.
              var linkArray = link.split(&#39;/&#39;).filter(function(elem){
                return elem != &#39;&#39;;
              });
              var srcArray = src.split(&#39;/&#39;).filter(function(elem){
                return elem != &#39;&#39; &amp;&amp; elem != &#39;.&#39;;
              });
              if(srcArray.length &gt; 1)
                srcArray.shift();
              src = srcArray.join(&#39;/&#39;);
              $(this).attr(&#39;src&#39;, config.root + link + src);
              console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);
            }
        }else{
            console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);
            console.info&amp;&amp;console.info($(this));
        }
      });
      data[key] = $.html();
    }
  }
});</code></pre><ul>
<li>hexo new test会生成一个test.md文件与test文件夹，将图片放入text文件夹下</li>
<li>_config.yml修改URL的url为你自己的github仓库 <a href="https://username.github.io" target="_blank" rel="noopener">https://username.github.io</a></li>
<li>在test.md中图片路径改为(编译时会把index.html文件放到test文件夹下，因此图片路径直接引用)</li>
</ul>
<pre><code>![](test.jpg)</code></pre>]]></content>
      <categories>
        <category>hexo问题</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo代码高亮</title>
    <url>/2020/01/06/problem/problem/</url>
    <content><![CDATA[<p><strong>hexo代码高亮</strong></p>
<ul>
<li><p>在主题的_config.yml文件中修改highlight为true,可自定义主题</p>
<pre><code>highlight:

 on: true # true开启代码高亮

 lineNum: true # true显示行号

 theme: kimbie-dark</code></pre></li>
</ul>
]]></content>
      <categories>
        <category>hexo问题</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>blog搭建</title>
    <url>/2020/01/02/blog/</url>
    <content><![CDATA[<p><strong>1、开始搭建</strong></p>
<p>windows环境搭建</p>
<p>&lt;1&gt;    安装  <code>git+nodejs</code></p>
<p>测试  <code>node -v</code>      <code>git --version</code></p>
<pre><code class="{% asset_img node.png Archer主题页面 %}">{% asset_img node.png Archer主题页面 %}</code></pre>
<p><img src="/2020/01/02/blog/node.png" alt></p>
<p><strong>2、  搭建流程</strong></p>
<ol>
<li>在某个文件夹下  <code>Git Bash Here</code>，输入  <code>npm install -g hexo</code>开始安装</li>
</ol>
<p>完成后输入hexo -v检查</p>
<p><img src="/2020/01/02/blog/hexo-v.png" alt></p>
<ol>
<li>在一个空文件夹下（blog）输入  <code>hexo init</code>  初始化文件夹，若生成以下文件说明安装成功</li>
</ol>
<p><img src="/2020/01/02/blog/test.png" alt></p>
<ol>
<li>输入    <code>hexo g</code>    <code>hexo s</code>    输入    <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>    访问网站</li>
</ol>
<p><img src="/2020/01/02/blog/image-20200102160613245.png" alt></p>
<ol>
<li>更换主题</li>
</ol>
<p>安装hexo主题</p>
<p>例<a href="https://github.com/yelog/hexo-theme-3-hexo.git" target="_blank" rel="noopener">https://github.com/yelog/hexo-theme-3-hexo.git</a></p>
<p><code>git clone https://github.com/yelog/hexo-theme-3-hexo.git themes/3-hexo</code></p>
<p>修改hexo根目录的<code>_config.yml</code></p>
<pre><code class="theme:">theme: 3-hexo</code></pre>
<p>输入  <code>hexo s</code>    刷新浏览器可看到修改后的页面</p>
<p><img src="/2020/01/02/blog/image-20200102161518422.png" alt></p>
<ol>
<li><p>在github创建仓库，仓库名与github账号名一致，命名方式为    <code>username.github.io</code></p>
</li>
<li><p>在根目录下_config.yml文件,添加如下代码</p>
<pre><code>deploy:
  type: git
  repository: https://github.com/zhangxuet/zhangxuet.github.io.git
  branch: master</code></pre></li>
</ol>
<p><strong>3、检查 SSH KEY</strong></p>
<ul>
<li>输入cd ~/.ssh，说明没有SSH KEY</li>
</ul>
<p><img src="/2020/01/02/blog/image-20200102162555031.png" alt></p>
<ul>
<li>添加SSH KEY</li>
</ul>
<p>输入 <code>ssh-keygen -t rsa -C &quot;邮箱名&quot;</code></p>
<p>一直回车</p>
<p><img src="/2020/01/02/blog/image-20200102162912687.png" alt></p>
<ul>
<li>再次输入命令    <code>cd ~/.ssh</code>   <code>ls</code></li>
</ul>
<p><img src="/2020/01/02/blog/image-20200102163014458.png" alt></p>
<ul>
<li>github 设置 SSH KEY</li>
</ul>
<p><img src="/2020/01/02/blog/image-20200102163351752.png" alt></p>
<p><img src="/2020/01/02/blog/image-20200102163427240.png" alt></p>
<ul>
<li>输入  eval “$(ssh-agent -s)”</li>
</ul>
<p>再输入    ssh-add ~/.ssh/id_rsa，添加生成的SSH key到ssh-agent</p>
<p>查看密匙   </p>
<p><img src="/2020/01/02/blog/image-20200102164037200.png" alt></p>
<p><img src="/2020/01/02/blog/image-20200102165043182.png" alt></p>
<p>或输入 cat ~/.ssh/id_rsa.pub 查看</p>
<pre><code class="console">ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAklOUpkDHrfHY17SbrmTIpNLTGK9Tjom/BWDSU
GPl+nafzlHDTYW7hdI4yZ5ew18JH4JW9jbhUFrviQzM7xlELEVf4h9lFX5QVkbPppSwg0cda3
Pbv7kOdJ/MTyBlWXFCR+HAo3FXRitBqxiX1nKhXpHAZsMciLq8V6RjsNAQwdsdMFvSlVK/7XA
t3FaoJoAsncM1Q9x5+3V0Ww68/eIFmb1zuUFljQJKprrX88XypNDvjYNby6vw/Pb0rwert/En
mZ+AW4OZPnTPI89ZPmVMLuayrD2cE86Z/il8b+gw3r3+1nKatmIkjn2so1d01QraTlMqVSsbx
NrRFi9wrf+M7Q== schacon@mylaptop.local</code></pre>
<ul>
<li>将id_ssa文件下的所有内容复制到github SSH KEY  ，输入 <code>ssh -T git@github.com</code>，测试添加ssh是否成功。如果看到Hi后面是你的用户名，就说明成功了</li>
</ul>
<p><img src="/2020/01/02/blog/image-20200102165517185.png" alt></p>
<ul>
<li>设置账号信息</li>
</ul>
<pre><code>git config --global user.name &quot;zhangxuet&quot;
git config --global user.email &quot;111111@qq.com&quot;</code></pre><ul>
<li>部署到 github，分别输入</li>
</ul>
<pre><code class="js">hexo g         hexo d        hexo s</code></pre>
<p>输入<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 就可以访问博客（本地）</p>
<p>输入https://用户名.github.io就能访问到你自己的github了</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>工具</title>
    <url>/2020/01/02/resources/index/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>First</title>
    <url>/2019/12/31/First/</url>
    <content><![CDATA[<p>[TOC]</p>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>:happy:</p>
<p>:cry:</p>
<p>:sweat:</p>
<p>​     <strong>123</strong></p>
<p><strong>123</strong></p>
<p><code>prinft</code></p>
<pre><code class="html">
&lt;h1&gt;
  hello {{ city }}
&lt;/h1&gt;

&lt;span&gt;
  nihao
&lt;/span&gt;
</code></pre>
123

<blockquote>
<p>1</p>
<blockquote>
<p>2</p>
<blockquote>
<p>3</p>
</blockquote>
</blockquote>
</blockquote>
<p>111</p>
<h2 id="二级标题-1"><a href="#二级标题-1" class="headerlink" title="二级标题"></a>二级标题</h2><p><code>123</code></p>
<h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><p><code>123</code></p>
<h3 id="三级标题-1"><a href="#三级标题-1" class="headerlink" title="三级标题"></a>三级标题</h3><h1 id="一级标题-1"><a href="#一级标题-1" class="headerlink" title="一级标题"></a>一级标题</h1>]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/12/31/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
